doctype html
html
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1')
    title Git: Ready for Hackathon

    link(href='http://fonts.googleapis.com/css?family=Open+Sans:300,600', rel='stylesheet', type='text/css')

    link(rel='stylesheet', type='text/css', href='build/build.css')

  body

    article

      section
        h1 Git: Ready for Hackathon
        h3
          a(href='https://twitter.com/michal_garbacz') @michal_garbacz
        img.avatar(src='https://secure.gravatar.com/avatar/c1a1cb91d6709234ff0fed46b166e446?size=70px')
        br
        p#secret "Me-how"

      section(data-bespoke-hash='short-url')
        h2 Short link to this preso: <a href="http://bit.ly/redbirdhacksgit">http://bit.ly/redbirdhacksgit</a>

      section
        h2 Version control
        ul
          li.bullet Keeps track of the changes to your code
          li.bullet Allows you to go back to any point in <span class="triadic-2-text">history</span>
          li.bullet Allows you to bundle code changes together into <span class="triadic-2-text">commits</span>
          li.bullet Allows you to <span class="triadic-2-text">merge</span> history

      section(data-bespoke-state='primary')
        h2 Git is a version control system

      section(data-bespoke-hash='workshop-setup')
        h2 Workshop Setup
          ul
            li <span class="triadic-1-text">Git:</span> Mac &amp; Linux have it, Windows should get <a href="https://msysgit.github.io/">msysGit</a>
            li <span class="triadic-1-text">Text Editor:</span> Use your favorite or get <a href="http://notepad-plus-plus.org/">Notepad++</a>
            li <span class="triadic-1-text">Remote:</span> Sign up for <a href="https://github.com/">Github</a>

      section(data-bespoke-hash='github-ssh-key')
        h2 <a href="https://help.github.com/articles/generating-ssh-keys/">Github generating SSH key</a>
        h3 Skip step 3

      section(data-bespoke-hash='git-global')
        h2 Git global setup
        pre
          code.language-bash.
            git config --global user.email "you@example.com"
            git config --global user.name "Your Name"

            # If Windows
            git config --global core.safecrlf false

      section(data-bespoke-hash='project-directory')
        h2 Setup a project directory
        pre
          code.language-bash.
            mkdir bugfree-unicorn
            cd bugfree-unicorn

      section(data-bespoke-hash='git-init')
        h2 Initialize a repository
        pre
          code.language-bash.
            git init

      section(data-bespoke-hash='git-status')
        h2 Check the status of the repository
        pre
          code.language-bash.
            git status

      section(data-bespoke-hash='create-file')
        h2 Create a README.md file
        pre
          code.language-bash.
            # Windows
            C:/Users/&lt;user&gt;/bugfree-unicorn
        pre
          code.language-bash.
            # Mac/Linux
            /users/&lt;user&gt;/bugfree-unicorn
        pre
          code.language-bash.
            # or with a command
            touch README.md
            echo "## bugfree-unicorn" &gt; README.md

      section(data-bespoke-hash='git-add')
        h2 Tell git to track the README.md file
        pre
          code.language-bash.
            git add README.md

      section(data-bespoke-hash='git-commit')
        h2 Bundle this change into a commit
        pre
          code.language-bash.
            git commit -m 'Add project name to README'

      section(data-bespoke-hash='github-create-project')
        h2 <a href="https://github.com/new">Create project on Github</a>

      section(data-bespoke-hash='git-remote')
        h2 Git remotes
        pre
          code.language-bash.
            git remote add origin &lt;github-url&gt;

      section(data-bespoke-hash='git-push')
        h2 Push your pending commit(s) to remote
        pre
          code.language-bash.
            git push

      section
        img.bubbles(src='http://markdalgleish.github.io/presentation-build-wars-gulp-vs-grunt/images/gif/bubbles.gif')

      section
        h2 Git team workflow
        ul
          li.bullet Create a <span class="triadic-2-text">branch</span>
          li.bullet Make commits on this branch in history
          li.bullet Merge the changes back to the master branch

      section(data-bespoke-hash='git-branch')
        h2 Create a branch
        pre
          code.language-bash.
            git branch add-list
            git checkout add-list

      section(data-bespoke-hash='git-commit-all')
        h2 Commit all modified files
        pre
          code.language-bash.
            git commit -am 'Add list item'

      section(data-bespoke-hash='git-log')
        h2 Let's look at our commit history
        pre
          code.language-bash.
            git log

      section(data-bespoke-hash='git-checkout-master')
        h2 Make a fix on master
        pre
          code.language-bash.
            git checkout master

            # Change `##` to `#`

            git commit -am 'Fix header'

            # Go back to working branch

            git checkout add-list

      section(data-bespoke-hash='git-rebase')
        h2 Let's squash some of those commits
        pre
          code.language-bash.
            git rebase -i &lt;sha&gt;

      section(data-bespoke-hash='git-merge')
        h2 Merge your branch into master
        pre
          code.language-bash.
            git checkout master

            git merge add-list

      section(data-bespoke-hash='git-branch-delete')
        h2 Delete the old branch
        pre
          code.language-bash.
            git branch -d all-list

      section(data-bespoke-hash='resources')
        h2 Git Resources
        ul
          li <a href="http://git-scm.com/">Official Git site</a>
          li <a href="https://help.github.com/">Github help</a>
          li <a href="http://try.github.com/">Try Git</a>
          li <a href="http://stackoverflow.com">Stackoverflow</a>
          li <a href="https://google.com">Google</a>


    script(src='build/build.js')
